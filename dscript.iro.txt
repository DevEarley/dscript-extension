#################################################################
## Iro
################################################################ 
##
## * Press Ctrl + '+'/'-' To Zoom in
## * Press Ctrl + S to save and recalculate... 
## * Documents are saved to web storage.
## * Only one save slot supported.
## * Matches cannot span lines.
## * Unicode chars must be defined in \u0000 to \uffff format.
## * All matches must be contained by a single group ( ... )
## * Look behinds not permitted, (?<= or (?<!
## * Look forwards are permitted (?= or (?!
## * Constants are defined as __my_const = (......)
## * The \= format allows unescaped regular expressions
## * Constants referenced by match \= $${__my_const}
## * Constants can reference other constants
## * You are free to delete all the default scopes.
## * Twitter : ainslec , Web: http://eeyo.io/iro
##
################################################################

name                   = dscript
file_extensions []     = dscript;

################################################################
## Constants
################################################################

__MY_CONSTANT \= (\b[a-z][a-z0-9]*)
__Control \= (^[.].*[[].*]$)|(^\..*)
__Control_Target \= (^.*\[(.*?)\].*$)
################################################################
## Styles
################################################################

styles [] {

.comment : style {
   color                 = light_green
   italic                = true
   ace_scope             = comment
   textmate_scope        = comment
   pygments_scope        = Comment
}

.text : style {
   color                 = white
   ace_scope             = text
   textmate_scope        = text
   pygments_scope        = String
}


.marker : style {
   color                 = orange
   bold                  = true
   ace_scope             = keyword
   textmate_scope        = keyword
   pygments_scope        = Keyword
}



.punctuation : style {
   color                 = light_blue
   ace_scope             = punctuation
   textmate_scope        = punctuation
   pygments_scope        = Punctuation
}



.escaped : style {
   color                 = grey
   ace_scope             = text
   textmate_scope        = text
   pygments_scope        = String
}

.list : style {
   color                = gold
   ace_scope            = keyword
   textmate_scope       = keyword
   pygments_scope       = Keyword
}

}

#################################################
## Parse contexts
#################################################

contexts [] {

##############################################
## Main Context - Entry point context
##############################################

main : context {

  
   : inline_push {
      regex          \= (\[)
      styles []       = .punctuation;
      : pop {  
         regex       \= (\])
         styles []    = .punctuation;
      }
      : include "inside" ;
   }




   
   : inline_push {
      regex          \= (^\..*\[)
      styles []       = .punctuation; 
      : pop {
         regex       \= (\])
         styles []    = .punctuation;
      }
      : include "inside" ;
   }
      
   : pattern {
      regex          \= (^\\\\.*$)
      styles []       = .marker;
   }
   : pattern {
      regex          \= (^//.*$)
      styles []       = .comment;
   }
   
   : inline_push {
      regex          \= (\`)
      styles []       = .escaped;
      default_style   = .escaped
      : pop {
         regex       \= (\`)
         styles []    = .escaped;
      }
   }
   
      
 
   
}

inside :context {

   :pattern {
   regex    \= (.*)(?=\])
   styles [] = .list;
   }
   :pattern {
   regex    \= ({,})
   styles [] = .text;
   }
}


   
}
